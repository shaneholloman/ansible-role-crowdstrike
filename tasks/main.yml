---
- name: Load var file with package names based on the OS type
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "{{ role_path }}/vars"

# Check if CrowdStrike Falcon sensor is already installed
- name: Check if the CrowdStrike Falcon sensor is already installed
  ansible.builtin.stat:
    path: "{{ crowdstrike_install_directory }}"
  register: falcon_directory

- name: Install the CrowdStrike Falcon sensor
  when: not falcon_directory.stat.exists
  block:
    - name: Fetch list of keys in bucket
      amazon.aws.s3_object:
        bucket: "{{ crowdstrike_third_party_bucket_name }}"
        mode: list
      become: false
      delegate_to: localhost
      register: keys

    - name: Install CrowdStrike package file
      vars:
        package_file: "{{ keys.s3_keys | select('search', package_file_regex) | first }}"
      block:
        - name: Grab the CrowdStrike Falcon sensor system package from S3
          amazon.aws.s3_object:
            bucket: "{{ crowdstrike_third_party_bucket_name }}"
            object: "{{ package_file }}"
            dest: /tmp/{{ package_file }}
            mode: get
          become: false
          delegate_to: localhost

        - name: Copy the CrowdStrike Falcon sensor system package
          ansible.builtin.copy:
            dest: /tmp/{{ package_file }}
            mode: 0700
            src: /tmp/{{ package_file }}

        - name: Load tasks file based on the OS type
          ansible.builtin.include_tasks: "{{ lookup('first_found', params) }}"
          vars:
            params:
              files:
                - "{{ ansible_distribution }}_{{ ansible_distribution_release }}.yml"
                - "{{ ansible_distribution }}.yml"
                - "{{ ansible_os_family }}.yml"
              paths:
                - "{{ role_path }}/tasks"

        - name: Enable the CrowdStrike Falcon sensor service
          ansible.builtin.service:
            enabled: true
            name: falcon-sensor

        - name: Delete local copy of the CrowdStrike Falcon sensor system package
          ansible.builtin.file:
            path: /tmp/{{ package_file }}
            state: absent
          become: false
          delegate_to: localhost

        - name: Delete remote copy of the CrowdStrike Falcon sensor system package
          ansible.builtin.file:
            path: /tmp/{{ package_file }}
            state: absent
